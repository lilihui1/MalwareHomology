package com.code.scut.service.Impl;

import com.alibaba.fastjson.JSONObject;
import com.code.scut.enums.FileSuffix;
import com.code.scut.service.QueryExecuteStatusService;
import com.code.scut.service.UploadFileService;
import com.code.scut.utils.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * @ClassName UploadFileServiceImpl
 * @Description TODO
 * @Author ASUS
 * @Date 2020/3/25 17:34
 * @Version 1.0
 */
@Service
public class UploadFileServiceImpl implements UploadFileService {

    @Autowired
    private QueryExecuteStatusService queryExecuteStatusService;
    @Autowired
        SaveAPIFileUtil saveAPIFileUtil;
    @Autowired
    private CuckooUtil cuckooUtil;

    @Value("${customValue.pythonFilePath}")
    private String pythonFilePath;
    @Value("${customValue.tempSavePath}")
    private String tempSavePath;

    @Override
    public Map uploadFileToCuckoo(Map<Object,Object> map) {
        /**这里需要将：filetype,userId,fileName，MD5,TaskId,UploadTime,fileSize存入数据库*/
        //String filetype = map.get("type").toString();
        MultipartFile file = (MultipartFile) map.get("file");
        String filetype = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(".") + 1);
        Integer userId = Integer.valueOf(map.get("userId").toString()) ;
        //获取文件名称、大小
        String fileName = file.getOriginalFilename();
        //单位是bytes
        Long size = file.getSize();
        String fileSize = FormetFileSizeUtil.FormetFileSize(size);

        //由于java过不了vpn。所以先调用python脚本
        // python文件路径——》争取放到jar包下，

        //String pythonFilePath = "E:\\upload.py";
       // String pythonFilePath = "/home/yushenglong/project/pythonFile/upload.py";

        //返回的是字符串
        //解决办法：java上传文件，保存在服务器，获取文件地址，调用python
        //String tempPath = "E:\\save\\"+fileName;
        //String tempPath = "/home/yushenglong/project/uploadFile/"+fileName;
        String tempPath = tempSavePath + fileName;
        File tempFile = new File(tempPath);
        try {
            //使用此方法保存必须要绝对路径且文件夹必须已存在,否则报错
            file.transferTo(tempFile);
        } catch (IOException e) {
            e.printStackTrace();
        }

        /**包含的信息有：TaskId*/
        String txt = ExecutePythonUtil.executePython(tempPath,pythonFilePath);
        File file2 = new File(tempPath);
        if (file2.exists()){
            file2.delete();
        }
        //java发送http请求
        //String txt = cuckooUtil.sendPostRequest("/tasks/create/submit",file);


        //提取TaskId
        JSONObject resultTxt = (JSONObject) JSONObject.parse(txt);


        Map<String, Object> data= resultTxt;
        List<Integer> taskIds = (List<Integer>) data.get("task_ids");
        Integer taskId = 0;
        if (!taskIds.isEmpty()){
            taskId = taskIds.get(0);
        }

        /**把taskId传进沙箱查询MD5值和status*/
        Map<String, Integer> paramMap = new HashMap<>();
        paramMap.put("userId",userId);
        paramMap.put("taskId",taskId);
        Map resultMap = queryExecuteStatusService.queryExecuteStatus(paramMap);
        resultMap.put("filetype",filetype);
        resultMap.put("fileName",fileName);
        resultMap.put("fileSize",fileSize);
        resultMap.put("predictStatus","0");
        String apiPath = null;
        resultMap.put("apiPath",apiPath);
        //用来区分标准时间和非标准时间
        resultMap.put("stand","unStand");
        resultMap.put("valid","1");


        return resultMap;
    }

    @Override
    public Map uploadAPIFile(Map<Object, Object> map) {
        MultipartFile file = (MultipartFile) map.get("file");
        //获取文件类型
        String filetype = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(".") + 1);
        Integer userId = Integer.valueOf(map.get("userId").toString()) ;
        //获取文件名称、大小
        String fileName = file.getOriginalFilename();
        //单位是bytes
        Long size = file.getSize();
        String fileSize = FormetFileSizeUtil.FormetFileSize(size);
        /**计算MD5*/
        String md5 = Md5CaculateUtil.getMd5(file);
        Map resultMap = new HashMap();

        resultMap.put("filetype",filetype);
        resultMap.put("fileName",fileName);
        resultMap.put("fileSize",fileSize);
        resultMap.put("predictStatus","0");
        resultMap.put("md5",md5);
        resultMap.put("userId",userId);
        resultMap.put("status","executed");
        //DateFormat df2 = DateFormat.getDateTimeInstance();//可以精确到时分秒
        Date date = new Date();
        //String uploadTimeStr = df2.format(date);
        //resultMap.put("uploadTimeStr",uploadTimeStr);
        resultMap.put("uploadTimeStr",date);
        //文件保存的路径
        //如果上传的是txt文件需要封装一下格式
        String apiPath;
        if (FileSuffix.TXT.equals(filetype.toUpperCase())){
            apiPath = saveAPIFileUtil.saveAPITxt(file);
        }
        else {
            //上传的格式正确就不用封装
            apiPath = saveAPIFileUtil.saveAPIFile(file);
        }

        resultMap.put("apiPath",apiPath);
        resultMap.put("startExectueTimeStr",null);
        resultMap.put("endExecuteTimeStr",null);
        //用来区分标准时间和非标准时间
        resultMap.put("stand","stand");
        resultMap.put("valid","1");

        return resultMap;
    }


}
