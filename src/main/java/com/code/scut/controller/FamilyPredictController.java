package com.code.scut.controller;

import com.code.scut.Predict.FileUtil;
import com.code.scut.Predict.Util;
import com.code.scut.common.JsonMessage;
import com.code.scut.service.ResultService;
import com.code.scut.service.SampleService;
import com.code.scut.utils.CovertAPIToListUtil;
import com.code.scut.utils.GetFamilyBehaviorUtil;
import com.code.scut.utils.ReadFileUtil;
import com.code.scut.utils.SetIntersectionUtil;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @ClassName FamilyPredictController
 * @Description 对样本进行家族预测
 * @Author lilihui
 * @Date 2020/4/1 15:27
 * @Version 1.0
 */
@RestController
@RequestMapping("/malware")
public class FamilyPredictController {

    @Autowired
    private SampleService sampleService;

    @Autowired
    private ResultService resultService;

    /** 记录日志 */
    private static final Logger logger = LoggerFactory.getLogger(FamilyPredictController.class);

    @RequestMapping(value = "/familyPredict",method = RequestMethod.POST)
    public JsonMessage familyPredict(@RequestBody Map param){
        /**传入的参数值有：userId、sampleId、status*/
        String status = param.get("status").toString();
        Map resultMap = new HashMap();
        String families [];
        if (status.equals("executed")){
            //首先取出md5和api，然后把api转成list
            String md5 = sampleService.getMD5(param);
            param.put("md5",md5);
            Map apiMap = sampleService.getSampleAPIFile(param);
            param.put("apiMap",apiMap);
            resultMap = resultService.familyPredict(param);
            if ((resultMap!=null)&&(!resultMap.isEmpty())){
                //更新一下预测状态
                param.put("predictStatus","1");
                int result = sampleService.updateSamplePredictStatus(param);
                if (result > -1){
                    resultMap.put("predictStatus","1");
                    return new JsonMessage(true,"1","成功",resultMap);
                }
            }

        }

        return new JsonMessage(false,"-1","失败",null);

    }

}
