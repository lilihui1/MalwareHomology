package com.code.scut.controller;

import com.code.scut.common.JsonMessage;
import com.code.scut.service.SampleService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.HashMap;
import java.util.Map;

/**
 * @ClassName UpdateMessageController
 * @Description 用于更新信息的控制层接口
 * @Author lilihui
 * @Date 2020/3/28 13:08
 * @Version 1.0
 */
@RestController
@RequestMapping("/malware")
public class UpdateMessageController {

    @Autowired
    private SampleService sampleService;

    /** 记录日志 */
    private static final Logger logger = LoggerFactory.getLogger(UpdateMessageController.class);


    /**
     * @Author lilihui
     * @Description //更新样本的执行状态
     * @Date 22:49 2020/3/28
     * @Param [params]
     * @return com.code.scut.common.JsonMessage
     **/
    @RequestMapping(value = "/updateSampleStatus", method = RequestMethod.POST)
    public JsonMessage updateSampleStatus(@RequestBody Map params){
        /**传入的参数有userId、sampleId、status*/
        Map resultMap = params;
        try{
            int result = sampleService.updateSampleStatus(params);
            if (result > 0){
                resultMap.put("result: ",result);
                return new JsonMessage(true,"1","成功",resultMap);
            }
        }catch (Exception e){
            logger.error("context: "+e);
        }
        return new JsonMessage(false,"-1","失败",null);
    }

    /**
     * @Author lilihui
     * @Description //删除样本
     * @Date 22:48 2020/3/28
     * @Param [params]
     * @return com.code.scut.common.JsonMessage
     **/
    @RequestMapping(value = "/deleteSample", method = RequestMethod.POST)
    public JsonMessage deleteSample(@RequestBody Map params){
        /**传入的参数有userId、sampleId*/
        Map resultMap = params;
        try{
            int result = sampleService.deleteSample(params);
            if (result > 0){
                resultMap.put("result: ",result);
                return new JsonMessage(true,"1","成功",resultMap);
            }
        }catch (Exception e){
            logger.error("context: "+e);
        }
        return new JsonMessage(false,"-1","失败",null);
    }

}
