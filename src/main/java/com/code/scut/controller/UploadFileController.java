package com.code.scut.controller;

import com.code.scut.common.JsonMessage;
import com.code.scut.enums.FileSuffix;
import com.code.scut.service.SampleService;
import com.code.scut.service.UploadFileService;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;
import com.alibaba.fastjson.JSONObject;
import java.util.HashMap;
import java.util.Map;

/**
 * @ClassName UploadFileController
 * @Description 文件上传
 * @Author lilihui
 * @Date 2020/3/25 17:14
 * @Version 1.0
 */
@RestController
@RequestMapping("/malware")
public class UploadFileController {
    /** 记录日志 */
    private static final Logger logger = LoggerFactory.getLogger(UploadFileController.class);
    @Autowired
    private UploadFileService uploadFileService;
    @Autowired
    private SampleService sampleService;

    @RequestMapping(value = "/tasks/create/submit", method = RequestMethod.POST)
    public JsonMessage upLoadFile(@RequestParam(value = "file", required = false) MultipartFile file,
                                  @RequestParam(value = "userId", required = false) String userId){
        Map resultMap = new HashMap();
        String filetype = file.getOriginalFilename().substring(file.getOriginalFilename().lastIndexOf(".") + 1);
        Map<Object,Object> tempMap = new HashMap();
        tempMap.put("file",file);
        tempMap.put("userId",userId);
        int result = -1;

        try{
            if (!(FileSuffix.DOC.equals(filetype.toUpperCase()) ||
                    FileSuffix.DOCX.equals(filetype.toUpperCase()) ||
                    FileSuffix.TXT.equals(filetype.toUpperCase()))){
                //上传的不是api序列日志
                resultMap = uploadFileService.uploadFileToCuckoo(tempMap);
            }
            if (FileSuffix.DOC.equals(filetype.toUpperCase()) ||
                    FileSuffix.DOCX.equals(filetype.toUpperCase()) ||
                    FileSuffix.TXT.equals(filetype.toUpperCase())){
                //上传的是api序列日志
                resultMap = uploadFileService.uploadAPIFile(tempMap);
                Object apiPath = resultMap.get("apiPath");
                if (apiPath == null){
                    //说明文件没有保存到特定路径
                    return new JsonMessage(false,"-1","失败",null);
                }
            }

            if (!resultMap.isEmpty()){
                /**这里上传成功需要执行一次数据库插入*/
                result = sampleService.insertSample(resultMap);
                if (result > 0){
                    //插入数据库成功
                    return new JsonMessage(true,"1","成功",resultMap);
                }
            }
        }catch (Exception e){
            logger.error("context: "+e);
        }
        return new JsonMessage(false,"-1","失败",null);

    }
}
