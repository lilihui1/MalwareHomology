package com.code.scut.Predict;

import net.sf.javaml.classification.Classifier;
import net.sf.javaml.classification.bayes.NaiveBayesClassifier;
import net.sf.javaml.core.Dataset;
import net.sf.javaml.core.Instance;
import net.sf.javaml.tools.data.FileHandler;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;


import java.io.File;

/**
 * 朴素贝叶斯分类器
 */
public class NaiveBayes {
    //训练集的路径
   // @Value("${customValue.trainVectorPath}")
    //public static String trainVectorPath;
   public static String trainVectorPath = "E:\\train.txt";
   //public static String trainVectorPath = "/home/yushenglong/project/train.txt";
   //目前训练集中只有43个集合
    //训练和测试数据中的分隔符号
    public static String separator =" ";
   public static int familySize = 43;
   public static Object predict(String testVectorPath) {
       try{
           Classifier naiveBayes = new NaiveBayesClassifier(true,true,true);
           Dataset trainData = FileHandler.loadDataset(new File(trainVectorPath),familySize, separator);
           naiveBayes.buildClassifier(trainData);
           Dataset testData = FileHandler.loadDataset(new File(testVectorPath),familySize,separator);

           for (
               Instance inst : testData) {
               Object predictClassValue = naiveBayes.classify(inst);
               return predictClassValue.toString();
           }
       }catch (Exception ex){
            ex.printStackTrace();
       }
        return null;
   }
}
