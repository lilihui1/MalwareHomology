package com.code.scut.Predict;

import org.apache.commons.io.FileUtils;

import java.io.*;
import java.net.URL;
import java.nio.file.Files;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;


public class FileUtil {
	/**
	 * 写文件
	 * @param path
	 * @param content
	 */
	public static boolean writeFile(String path,String content) {

		File file = new File(path);
		boolean isSuccess = true;
		System.out.println(path);
		// if file doesnt exists, then create it
		if (!file.exists()) {
			try {
				isSuccess = file.createNewFile();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				isSuccess = false;
			}
		}else{
			file.delete();
		}
		FileWriter fw;
		try {
			fw = new FileWriter(file.getAbsoluteFile());
			BufferedWriter bw = new BufferedWriter(fw);
			bw.write(content);
			bw.close();
			System.out.println("写入成功.");
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("写入失败.");
			isSuccess = false;
		}
		return isSuccess;
	}
	public static String readFile(String path) {
		StringBuffer sBuffer = new StringBuffer();
		File file = new File(path);
		if(!file.exists()) {
			System.err.println("路径不存在");
			return null;
		}
		try {
			FileReader fileReader = null;
			BufferedReader bf = null;
			fileReader = new FileReader(file.getAbsolutePath());
			bf= new BufferedReader(fileReader);
			String str;
			int index = 0;
			// 按行读取字符串,顺序放到LinkedHashSet中，并且去重
			while ((str = bf.readLine()) != null) {
				sBuffer.append(str);
			}
			if(fileReader!=null) {
				fileReader.close();
			}
			if(bf!=null) {
				bf.close();
			}
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return sBuffer.toString();
	}
}
